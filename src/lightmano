#!/bin/sh

# -------------------------------------------------------
# A shell script that sets the brightness level
# Written by: Thomas Venries
# Last updated on: 2016/7/11
# -------------------------------------------------------

#set -e

usage() {
	echo "Usage: lightmano [OPTION]..."
	echo -e "Option values are positive integers.\n"

	echo "Operations:"
	echo -e "-h:\tPrint this help and exits\n"

	echo "Threshold (can be used in conjuntion):"
	echo -e "-m:\tSet the minimum brightness"
	echo -e "-M:\tSet the maximum brightness\n"

	echo "Controller (can not be use in conjunction):"
	echo -e "-a:\tAdd value"
	echo -e "-s:\tSubtract value"
	echo -e "-c:\tSet value\n"

	echo -e "No option (read values):  <controller_path>: min;current;max\n"
}

no_conjunction_with() {
	while [ $# -ne 0 ]; do
		[ "$1" = true ] && break || shift
	done

	if [ $# -eq 0 ]; then
		return 1
	fi

	echo "Operation arguments can not be used in conjunction."
	return 0
}

is_positive_integer() {
	[[ "$1" =~ ^[0-9]+ ]] && return 1 || return 0
}

main() {

	best_max=0
	best_controller=
	for i in `echo /sys/class/backlight/*` ; do
		if ! [ -f "${i}/max_brightness" ] ||
				! [ -f "${i}/brightness" ] ||
				! [ -r "${i}/max_brightness" ] ||
				! [ -r "${i}/brightness" ] ; then
				#! [ -w "${i}/brightness" ] ; then
			continue
		fi
		max=`cat ${i}/max_brightness`
		if (( "$best_max" < "$max" )) ; then
			best_max=$max
			best_controller=${i}
		fi
	done

	own_min=0
	own_max=$(( best_max-1 ))
	file="$best_controller/brightness"
	brightness=$(cat $file)

	if [ "$#" -eq 0 ]; then
		echo "$best_controller: $own_min;$brightness;$own_max"
		exit 0
	fi

	mFlag=false
	MFlag=false
	aFlag=false
	sFlag=false
	cFlag=false

	OPTIND=1
	while getopts "hm:M:a:s:c:" opt; do
		case $opt in
			h) usage && exit 0;;
			m)
				is_positive_integer "$OPTARG"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				mFlag=true
				mArg=$OPTARG
				;;
			M)
				is_positive_integer "$OPTARG"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				MFlag=true
				MArg=$OPTARG
				;;
			a)
				no_conjunction_with "$cFlag" "$sFlag"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				is_positive_integer "$OPTARG"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				aFlag=true
				valArg=$OPTARG
				;;
			s)
				no_conjunction_with "$aFlag" "$sFlag"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				is_positive_integer "$OPTARG"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				sFlag=true
				valArg=$OPTARG
				;;
			c)
				no_conjunction_with "$aFlag" "$sFlag"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				is_positive_integer "$OPTARG"
				if [ "$?" == 0 ]; then usage; exit 2; fi
				cFlag=true
				valArg=$OPTARG
				;;
			\?) exit 2 ;;
			:) exit 2 ;;
		esac
	done

	shift "$((OPTIND-1))"

	# The brightness is not set
	if [ "$aFlag" = false ] && [ "$sFlag" = false ] && [ "$cFlag" = false ]
	then
		usage; exit 0
	fi

	# The minimum has been modified
	[ "$mFlag" = true ] && own_min=$mArg
	# The maximum has been modified
	[ "$MFlag" = true ] && own_max=$MArg

	# Increase the current value
	if [ "$aFlag" = true ]; then
		value=$(( brightness+valArg ))
		if (( $brightness == 0 )) ; then
			value=$(( own_min+valArg ))
		elif (( "$value" > "$own_max" )) ; then
			value=$own_max
		fi
		echo $value | sudo /usr/bin/tee $file
	fi

	# Decrease the current value
	if [ "$sFlag" = true ]; then
		value=$(( brightness-valArg ))
		(( $value <= $own_min )) && value=0
		echo $value | sudo /usr/bin/tee $file
	fi

	# Set the current value
	if [ "$cFlag" = true ]; then
		value=$valArg
		if (( $value > $own_max )) ; then
			value=$own_max
		elif (( $value < $own_min )) ; then
			value=0
		fi
		echo $value | sudo /usr/bin/tee $file
	fi
}

main "$@"
